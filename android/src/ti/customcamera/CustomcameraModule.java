/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.customcamera;

import java.util.ArrayList;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import ti.camera.activities.CustomCameraActivity;
import ti.camera.activities.PreviewActivity;
import ti.camera.utils.CameraManager;
import ti.camera.utils.ImageAdapter;
import ti.camera.utils.ImagesTempInfo;
import ti.camera.utils.ModuleEventListener;
import android.content.Intent;

@Kroll.module(name = "Cameramodule", id = "ti.customcamera")
public class CustomcameraModule extends KrollModule implements ModuleEventListener
{

    // Standard Debugging variable
    private static final String TAG = "CameramoduleModule";
    private ArrayList<ImagesTempInfo> imagesTempInfoArrayList;

    public CustomcameraModule()
    {
    	super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app)
    {
    	Log.d(TAG, "inside onAppCreate");

    }

    // Method for showing the camera
    @Kroll.method
    public void showCameraView(Object images)
    {
		// Initialize the array.
		imagesTempInfoArrayList = new ArrayList<ImagesTempInfo>();
		// Register the event listener which will be called from the full image
		// activity.
		CameraManager.registerModuleEventListener(this);
	
		// Create directory to save the pictures into.
		CameraManager.createCameraImagesStorageDirectory();
	
		// Parse the data coming from titanium and save into JSONArray.
		Object imagesArray[] = (Object[]) images;
		Log.d(TAG, "Images array with " + imagesArray.length + " entries.");
		Log.d(TAG, "Now parsing the and storing the data into JSONArray ");
	
		if (imagesArray == null || imagesArray.length == 0)
		{
		    Log.d(TAG, "Empty images array.Now will be redirected to Camera screen.");
		    Intent intent = new Intent(getActivity(), CustomCameraActivity.class);
		    getActivity().startActivity(intent);
		    ImageAdapter.setImagesTempInfoMap(imagesTempInfoArrayList);
		}
		else
		{
	
		    JSONArray jsonArray = new JSONArray();
	
		    for (int i = 0; i < imagesArray.length; i++)
		    {
			ImagesTempInfo imagesTempInfo = new ImagesTempInfo();
			Object obj = imagesArray[i];
			String value = obj.toString().replaceAll("https:", "https");
			value = value.replace("{", "").replace("}", "");
	
			String[] s = value.split(",");
	
			JSONObject jsonObject = new JSONObject();
			for (int j = 0; j < s.length; j++)
			{
			    String string = s[j];
			    String[] v = string.split("=");
			    try
			    {
				if (v[0].trim().equalsIgnoreCase("description"))
				{
				    jsonObject.put(v[0].trim(), v[1].replaceAll("https", "https:").trim());
				}
				else
				{
				    jsonObject.put(v[0].trim(), v[1].trim());
				}
			    }
			    catch (JSONException e)
			    {
				e.printStackTrace();
			    }
	
			}
	
			String imageName = null;
			try
			{
			    imagesTempInfo.setAdditionalInfo(jsonObject.getString("additionalInfo"));
			    imagesTempInfo.setCode(jsonObject.getString("code"));
			    imagesTempInfo.setDescription(jsonObject.getString("description"));
			    imageName = jsonObject.getString("code") + "." + CameraManager.getFileExtension(jsonObject.getString("description"));
			    Log.d(TAG, "imageName---:" + imageName);
			    imagesTempInfo.setImageName(imageName);
	
			}
			catch (JSONException e)
			{
			    e.printStackTrace();
			}
			jsonArray.put(jsonObject);
			imagesTempInfoArrayList.add(imagesTempInfo);
	
		    }
	
		    Log.d(TAG, "Size of the json array:" + jsonArray.length());
	
		    // set the JSON array in camera manager to use by ImageAdapter.
		    CameraManager.setImagesJSONArray(jsonArray);
		    ImageAdapter.setImagesTempInfoMap(imagesTempInfoArrayList);
		    Log.d(TAG, "Images array present. Now will be redirected to Previw screen.");
		    CameraManager.setCustomCameraActivity(null);
		    Intent intent = new Intent(getActivity(), PreviewActivity.class);
		    getActivity().startActivity(intent);
		}

    }

    public void onDestroy(android.app.Activity activity)
    {
    	Log.d(TAG, "onDestroy Called.");
    }

    @Override
    public void saveImages(JSONObject imagesInfo)
    {
    	KrollDict dic = null;
		try
		{
		    dic = new KrollDict(imagesInfo);
		}
		catch (JSONException e)
		{
		    e.printStackTrace();
		}
		fireEvent("uploadImages", dic);
		Log.d(TAG, "saveImages() Called.");
		imagesTempInfoArrayList.clear();
		imagesTempInfoArrayList = null;
    }

    @Override
    public void deleteImage(JSONObject imageInfo)
    {
		KrollDict dic = null;
		try
		{
		    dic = new KrollDict(imageInfo);
		}
		catch (JSONException e)
		{
		    e.printStackTrace();
		}
		fireEvent("deleteImage", dic);
		Log.d(TAG, "saveImages() Called.");
    }

    @Override
    public void setDefaultImage(JSONObject imageInfo)
    {
		KrollDict dic = null;
		try
		{
		    dic = new KrollDict(imageInfo);
		}
		catch (JSONException e)
		{
		    e.printStackTrace();
		}
		fireEvent("setDefaultImage", dic);
		Log.d(TAG, "setDefaultImage() Called.");
	}

}
